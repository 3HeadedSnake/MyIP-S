# -*- coding: utf-8 -*-
"""MTNData_report.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yJB8-UQwvqCuRDdrKVUEX1BsJbNdx9ii
"""

import pandas as pd
import numpy as np
import csv

# Let's load our datasets
day1 = pd.read_csv('Telcom_dataset.csv')
day2 = pd.read_csv('Telcom_dataset2.csv')
day3 = pd.read_csv('Telcom_dataset3.csv')
#cells_geo = pd.read_csv('cells_geo.csv')

#cells_df = pd.DataFrame(cells_geo)
#cells_df.head()

#Let's now merge the dataset from the three days
all_days = pd.concat((day1, day2, day3), axis=0, join='outer', ignore_index=False)
print(all_days.shape)

df = pd.DataFrame(all_days)
df

# Let us now count the number of missin values in each colums
df.apply(lambda x: sum(x.isna()/ len(df)))

#Let's now find and drop the duplicate values
df.duplicated()
df.drop_duplicates()
df

# Let us now find and delete the missing data
df.isnull() # returns True for all cells with a NaN value

# Drop the missing values
df_no_missing = df.dropna()
df_no_missing

# Drop rows with missing values
df_clean = df.dropna(how='all')
df_clean

# Let's lowercase column names in the dataframe
df.columns = map(str.lower, df.columns)
df

# Drop column if they contain missing values
df.dropna(axis=1, how='all')

# Let's fill all the mising values with 0
df.fillna(0)

df.info()

# Let's drop the columns that we do not need for the analysis
#df = df.drop(['country_a', 'country_b'], axis=1)

df.info()

df.head()

# Let's find the total billing price
sum_df = df['value'].sum()
print("Total billing price is: ", sum_df )

df.describe()

# Let's try and convert the'Product' column values to numeric
from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()

df.info()

#label_encoder.fit(df['product'])
#df['product'] = label_encoder.transform(df['product'])
#df.info()

df.head()

# Let's first join the columns with the same items
#product_name = pd.merge(left=df['produtc'], right=df['product'])
#product_name.head()

# Lets iterate through the rows
subset_loc = df.loc[[0, 1, 3]]
subset_loc.head()

# Lets count the services in the products
df.rename(columns={'produtc': 'product'}, inplace=True)

df.head()



